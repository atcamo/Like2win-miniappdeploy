name: Daily Raffle Automation

on:
  schedule:
    # Execute full daily cycle at 23:59 UTC (execute current + start next)
    - cron: '59 23 * * *'

  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'full_daily_cycle'
        type: choice
        options:
        - execute_daily_raffle
        - start_next_raffle
        - full_daily_cycle

jobs:
  daily-raffle-automation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Execute Daily Raffle Automation
      env:
        AUTOMATION_SECRET: ${{ secrets.AUTOMATION_SECRET }}
        PRODUCTION_URL: ${{ secrets.PRODUCTION_URL }}
      run: |
        # Determine action based on trigger
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          # For scheduled runs, use full cycle (execute current raffle + start next)
          ACTION="full_daily_cycle"
          echo "‚è∞ Scheduled execution: Running full daily cycle"
        else
          # For manual runs, use the selected action
          ACTION="${{ github.event.inputs.action }}"
          echo "üîß Manual execution: Running $ACTION"
        fi

        echo "ü§ñ Triggering daily raffle automation: $ACTION"
        
        # Call the automation API (REAL DATABASE VERSION)
        RESPONSE=$(curl -s -X POST "$PRODUCTION_URL/api/automation/daily-raffle" \
          -H "Content-Type: application/json" \
          -d "{\"action\": \"$ACTION\", \"authorization\": \"$AUTOMATION_SECRET\"}")
        
        echo "üìä Response: $RESPONSE"
        
        # Check if the request was successful
        if echo "$RESPONSE" | grep -q '"success":true'; then
          echo "‚úÖ Daily raffle automation completed successfully"
        else
          echo "‚ùå Daily raffle automation failed"
          echo "$RESPONSE"
          exit 1
        fi

    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Daily raffle automation failed at $(date)"
        # TODO: Add notification to Discord/Slack if needed

# WORKFLOW OPTIMIZATION NOTES:
#
# Previous Issue: Two separate cron jobs (23:59 and 00:01) caused duplicate raffle creation
# Solution: Single cron job at 23:59 UTC using 'full_daily_cycle' action
#
# The 'full_daily_cycle' action:
# 1. Executes current active raffle (selects winners)
# 2. Creates next day's raffle (with duplicate detection)
# 3. Handles both operations atomically to prevent conflicts
#
# Benefits:
# - No more duplicate executions
# - Cleaner logs and easier debugging
# - Atomic operation reduces race conditions
# - API includes fix for handling existing raffles gracefully